worker_processes 4;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;

    log_format default '$remote_addr RID $http_x_request_id [$time_local] '
                       '$request $status REQUEST TIME SEC $request_time UPSTREAM TIME SEC $upstream_response_time';
    access_log /var/log/nginx/access.log default;

    client_max_body_size 300M;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 10;
    types_hash_max_size 2048;
    server_tokens off;

    gzip on;
    gzip_comp_level 5;
    gzip_types application/json application/x-javascript application/javascript text/css image/jpeg image/png;
    gzip_min_length 15k;

    upstream api {
        server api:3000;
    }

    server {
        listen 443 ssl default_server http2;
        server_name api.blocklog.ru;

        ssl_certificate /etc/letsencrypt/live/api.blocklog.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.blocklog.ru/privkey.pem;

        charset utf-8;

        location / {
            proxy_pass http://api;
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Proxy "";
        }

        root /var/www/block-log-api/public;

        location ^~ /assets/ {
            gzip_static on;
            expires max;
            add_header Cache-Control public;
        }

        location ^~ /system/ {
            gzip_static on;
            expires max;
            add_header Cache-Control public;
        }
    }

    server {
        listen 80;

        location / {
            return 302 https://api.blocklog.ru;
        }
    }
}
